replicaCount: 1

image:
  repository: docker.io/keptncontrib/job-executor-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

jobexecutorserviceinitcontainer:
  image:
    repository: docker.io/keptncontrib/job-executor-service-initcontainer # Container Image Name
    tag: ""                                                               # Container Tag

distributor:
  stageFilter: ""                            # Sets the stage this helm service belongs to
  serviceFilter: ""                          # Sets the service this helm service belongs to
  projectFilter: ""                          # Sets the project this helm service belongs to
  image:
    repository: docker.io/keptn/distributor  # Container Image Name
    pullPolicy: IfNotPresent                 # Kubernetes Image Pull Policy
    tag: "0.13.4"                             # Container Tag
  config:
    queueGroup:
      enabled: true                          # Enable connection via Nats queue group to support exactly-once message processing
  securityContext:                           # Settings for the default security context of the distributor
    runAsNonRoot: true
    runAsUser: 65532
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    privileged: false

remoteControlPlane:
  topicSubscription: "sh.keptn.event.test.triggered,sh.keptn.event.deployment.triggered,sh.keptn.event.evaluation.triggered,sh.keptn.event.release.triggered,sh.keptn.event.approval.triggered" # Specify list of CloudEvents to subscribe to in the case of remote control plane
  autoDetect:                                # The auto-detection feature enables helm to query the API token from the Keptn installation, no api.token, api.protocol, api.hostname must be specified
    enabled: false                           # Enable of the auto-detection of the Keptn install
    namespace: ""                            # If multiple instances of Keptn are installed, the namespace of the target instance must be given
  api:
    protocol: "http"                         # Used Protocol (http, https)
    apiValidateTls: true                     # Defines if the control plane certificate should be validated
    hostname: "api-gateway-nginx.keptn"      # Hostname of the control plane cluster, Port
    token: ""                                # Keptn API Token

jobConfig:
  serviceAccount:                            # The default service account that is used for jobs
    create: true                             # Enables the service account creation
    name: "default-job-account"              # The name of the service account to use for job execution
    annotations: { }                         # Annotations to add to the service account
  allowedImageList: ""                       # A list of images that are allowed for the jobs (e.g.: docker.io/*,ghcr.io/my-other-user/my-other-image:*,ghcr.io/my-user/my-image:1.2.3)
  labels: { }                                # Configure additional labels that should be attached to all jobs
  # --------------------------------------------------------------------------------------------------- #
  # WARNING: allowing privileged containers or runAsNonRoot is dangerous, only change the default       #
  #          security configuration if you need, the securityContext can be overwritten by each job     #
  # --------------------------------------------------------------------------------------------------- #
  allowPrivilegedJobs: false                 # If true the job-executor-service will only warn instead of refusing to run privileged jobs
  podSecurityContext:                        # Default pod security context for job workloads
    RunAsUser: 1000
    RunAsGroup: 2000
    RunAsNonRoot: true
    fsGroup: 2000
    seccompProfile:
      type: RuntimeDefault
  jobSecurityContext:                        # Default security context for job workloads, can be overwritten by jobs
    privileged: false
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 2000
    capabilities:
      drop: [ "all" ]
    seccompProfile:
      type: RuntimeDefault
  taskDeadlineSeconds: 0                     # Set taskDeadlineSeconds to an integer > 0 to limit how long task can run

imagePullSecrets: [ ]                        # Secrets to use for container registry credentials

serviceAccount:
  create: true                               # Enables the service account creation
  annotations: { }                           # Annotations to add to the service account
  name: ""                                   # The name of the service account to use.

config:
  storageClassName: "gp2"
  storageVolumeName: "job-executor-service-git-volume"

podAnnotations: { }                           # Annotations to add to the created pods

# -------------------------------------------------------------------------- #
# WARNING: DO NOT CHANGE THE DEFAULT podSecurityContext OR securityContext!  #
# Changes may                                                                #
#   - impact the job-executor-service from running correctly                 #
#   - result in a security risk for the whole kubernetes cluster             #
# -------------------------------------------------------------------------- #
podSecurityContext:
  fsGroup: 2000

securityContext:
  privileged: false
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 2000
  capabilities:
    drop: ["all"]
  seccompProfile:
    type: RuntimeDefault

service:
  type: ClusterIP
  port: 8080

resources: # Resource limits and requests
  limits:
    cpu: 1
    memory: 512Mi
  requests:
    cpu: 50m
    memory: 128Mi

nodeSelector: { }                                # Node selector configuration

tolerations: [ ]                                 # Tolerations for the pods

affinity: { }                                    # Affinity rules

networkPolicy:
  enabled: false
  k8sMasterCIDR: ""
  k8sMasterPort: 0