name: Create Pre-Release
on:
  workflow_dispatch:
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3.0.2
      - name: Unit tests
        uses: ./.github/actions/unit-tests

  pre-release:
    needs: test
    name: Pre-Release
    uses: keptn/gh-automation/.github/workflows/pre-release-integration.yml@v1.5.3

  docker_build:
    needs: [pre-release]
    name: Docker Build
    runs-on: ubuntu-20.04
    env:
      VERSION: ${{ needs.pre-release.outputs.RELEASE_TAG }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.2

      - name: Load CI Environment from .ci_env
        id: load_ci_env
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .ci_env

      - name: Docker Build
        id: docker_build_service
        uses: keptn/gh-automation/.github/actions/docker-build@v1.5.3
        with:
          TAGS: |
            ${{ env.DOCKER_ORGANIZATION }}/${{ env.IMAGE }}:${{ env.VERSION }}
            ${{ env.DOCKER_ORGANIZATION }}/${{ env.IMAGE }}:${{ env.VERSION }}.${{ env.DATETIME }}
          BUILD_ARGS: |
            version=${{ env.VERSION }}
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Docker Build Initcontainer
        id: docker_build_initcontainer
        uses: keptn/gh-automation/.github/actions/docker-build@v1.5.3
        with:
          TAGS: |
            ${{ env.DOCKER_ORGANIZATION }}/${{ env.IMAGE_INITCONTAINER }}:${{ env.VERSION }}
            ${{ env.DOCKER_ORGANIZATION }}/${{ env.IMAGE_INITCONTAINER }}:${{ env.VERSION }}.${{ env.DATETIME }}
          BUILD_ARGS: |
            version=${{ env.VERSION }}
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          DOCKERFILE: ${{ env.DOCKERFILE_INITCONTAINER }}

  helm_chart_build:
    needs: [pre-release, docker_build]
    name: Build Helm Charts
    runs-on: ubuntu-20.04
    env:
      VERSION: ${{ needs.pre-release.outputs.RELEASE_TAG }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.2

      - name: Load CI Environment from .ci_env
        id: load_ci_env
        uses: c-py/action-dotenv-to-setenv@v3
        with:
          env-file: .ci_env

      - name: Build Helm Charts
        id: build_helm_charts
        uses: keptn/gh-automation/.github/actions/build-helm-charts@v1.6.0
        with:
          VERSION: ${{ env.VERSION }}
          APP_VERSION: ${{ env.VERSION }}
          CHART_NAME: ${{ env.IMAGE }}

      - name: Upload Helm Chart as release asset
        env:
          RELEASE_TAG: ${{ needs.pre-release.outputs.RELEASE_TAG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "$RELEASE_TAG" installer/*.tgz

  linter_build:
    needs: [pre-release]
    name: Build Linter
    runs-on: ubuntu-20.04
    env:
      VERSION: ${{ needs.pre-release.outputs.RELEASE_TAG }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.0.2

      - name: Run make
        run: make build-lint

      - name: Rename binaries
        run: |
          mv ./bin/job-lint-linux-amd64 ./bin/job-lint-linux-amd64-$VERSION
          mv ./bin/job-lint-windows-amd64 ./bin/job-lint-windows-amd64-$VERSION.exe
          mv ./bin/job-lint-darwin-amd64 ./bin/job-lint-darwin-amd64-$VERSION

      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "$VERSION" bin/job-lint-*
