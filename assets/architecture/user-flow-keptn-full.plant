@startuml

actor User


participant "Keptn API" as A
participant "MongoDB" as M
participant "NATS" as N
participant "shipyard-controller" as S
participant "configuration-service" as C
participant "Git Repo" as G
participant "Job-Executor" as JES
participant "Job-Executor Job" as JOB
participant "Kubernetes" as K8S
participant "Container Registry" as DOCKER

User --> A: keptn create project -p=foobar -s=shipyard.yaml

A --> S
S --> C
C --> G: git clone/pull/checkout
C --> G: git add shipyard.yaml

User --> A: keptn add-resource -p=foobar job/config.yaml
A --> C
C --> G: git add job/config.yaml


User --> A: keptn trigger pipeline -p=foobar
A --> N: Seq pipeline.triggered
N --> M: Insert pipeline.triggered
N --> S:
S --> C: Request shipyard.yaml
C <--> G: shipyard.yaml
C --> S: shipyard.yaml
S --> N: Emit Seq pipeline.started
N --> M: Insert pipeline.started
S --> S: process
S --> N: Task test.triggered
N --> M: Insert test.triggered

JES --> A: Poll test.triggered
A <--> M: Query test.triggered
A --> JES: test.triggered
JES --> C: Request job/config.yaml
C <--> G: job/config.yaml
C --> JES: job/config.yaml
JES --> JES: process
JES --> A: Emit Task test.started
A --> N: Task test.started
N --> M: Insert test.started
JES --> K8S: Create job
K8S <--> DOCKER: Fetch "keptn-contrib/job-executor-initcontainer"
K8S <--> DOCKER: Fetch "docker.io/locustio/locust"
K8S --> JOB: Start job
K8S --> JOB: Run initcontainer
JOB --> C: Fetch files "locust/{basic.py,locust.conf}"
C <--> G: files
C --> JOB: files (stored in emptyDir volume)
JOB --> K8S: initcontainer done
K8S --> JOB: Run pod docker.io/locustio/locust
JOB --> K8S: Job done
JES <--> K8S: Poll: Is job finished
JES --> A: Task test.finished
A --> N: Task test.finished
N --> S: Task test.finished
N --> M: Insert test.finished
S --> S: process
S --> N: Seq pipeline.finished
N --> M: Insert pipeline.finished

User --> A: keptn get event pipeline.finished
A --> M: Query seq pipeline.finished
@enduml
